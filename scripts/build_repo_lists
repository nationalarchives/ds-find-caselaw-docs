#!/usr/bin/env python

import re

REPOSITORIES = [
    {
        "id": "ds-find-caselaw-docs",
        "description": "High-level documentation for the service, and MarkLogic configuration.",
    },
    {
        "id": "ds-caselaw-public-ui",
        "description": "Public interface to the service.",
    },
    {
        "id": "ds-caselaw-editor-ui",
        "description": "Editor interface to the service.",
    },
    {
        "id": "ds-caselaw-ingester",
        "description": "Ingests cases from the Transformation Engine into MarkLogic.",
    },
    {
        "id": "ds-caselaw-pdf-conversion",
        "description": "Converts a judgement to PDF.",
    },
    {
        "id": "ds-caselaw-privileged-api",
        "description": "The API which annotating services talk to.",
    },
    {
        "id": "ds-caselaw-custom-api-client",
        "description": "API client to interface with MarkLogic.",
    },
    {
        "id": "ds-caselaw-utils",
        "description": "Common utilities across codebases.",
    },
    {
        "id": "ds-caselaw-custom-pdfs",
        "description": "Custom PDFs to overwrite generated ones.",
    },
]

print("Building dashboard...")

with open("repo-dashboard.md", "w") as f:
    f.write("# Repository Dashboard\n")
    f.write("\n")
    f.write(
        "<!-- This file is automatically generated from scripts/build_repo_lists. You shouldn't edit it manually. -->\n"
    )
    f.write("\n")
    f.write(
        "| Repository | Description | Pull requests | Latest release | Latest commit (`main`) |\n"
    )
    f.write("| --- | --- | --- | --- | --- |\n")

    for repo in REPOSITORIES:

        repo_name = repo["id"]
        repo_base_url = f"https://github.com/nationalarchives/{repo_name}"
        repo_description = repo["description"] if "description" in repo else "-"

        f.write("| ")
        f.write(f"[{repo_name}]({repo_base_url})")

        f.write(" | ")
        f.write(repo_description)

        f.write(" | ")
        f.write(
            f"[![Pull requests](https://img.shields.io/github/issues-pr/nationalarchives/{repo_name}?label)]({repo_base_url}/pulls)"
        )

        f.write(" | ")
        f.write(
            f"[![Latest release](https://img.shields.io/github/v/release/nationalarchives/{repo_name}?label&sort=semver)]({repo_base_url}/releases)"
        )

        f.write(" | ")
        f.write(
            f"[![Latest commit to main](https://img.shields.io/github/last-commit/nationalarchives/{repo_name}/main?label)]({repo_base_url}/commits)"
        )
        f.write(" |\n")

print("Populating repository list in readme...")

with open("README.md") as f:
    readme_str = f.read()

pattern = r"""<!-- Begin list of repositories -->.*?<!-- End list of repositories -->"""

replacement = """<!-- Begin list of repositories -->
<!-- This section is automatically generated from scripts/build_repo_lists. You shouldn't edit it manually. -->
| Repository | Description |
| --- | --- |"""

for repo in REPOSITORIES:

    repo_name = repo["id"]
    repo_base_url = f"https://github.com/nationalarchives/{repo_name}"
    repo_description = repo["description"] if "description" in repo else "-"

    replacement += f"""
| [{repo_name}]({repo_base_url}) | {repo_description} |"""

replacement += """
<!-- End list of repositories -->"""

readme_str = re.sub(pattern, replacement, readme_str, flags=re.DOTALL)

with open("README.md", "w") as f:
    f.write(readme_str)
