openapi: 3.1.0
info:
  title: "National Archives Find Case Law: Public API"
  version: 0.1.3
  description: |-
    Our API provides access to judgments and decisions held by Find Case Law that have been converted from Microsoft Word documents into XML. These have been automatically marked up according to the [international data standard, LegalDocML](https://groups.oasis-open.org/communities/tc-community-home2?CommunityKey=3425f20f-b704-4076-9fab-018dc7d3efbe), and validated by our legal editorial team. This data includes:

    - Neutral Citation
    - Court / Chamber
    - Date
    - Case Name
    - Party Names
    - Judges' Names
  termsOfService: "https://caselaw.nationalarchives.gov.uk/terms-of-use"
  contact:
    email: caselaw@nationalarchives.gov.uk
    url: "https://caselaw.nationalarchives.gov.uk/"
    name: Find Case Law
  license:
    name: Open Justice Licence
    url: "https://caselaw.nationalarchives.gov.uk/open-justice-licence"
  summary: "The Find Case Law API allows you to access court judgments and tribunal decisions held in the [Find Case Law service](https://caselaw.nationalarchives.gov.uk/), operated by the National Archives."
servers:
  - url: "https://caselaw.nationalarchives.gov.uk"
    description: ""
tags:
  - name: Reading
    description: Operations for reading document content and metadata
components:
  parameters:
    judgmentUri:
      name: judgmentUri
      in: path
      required: true
      schema:
        type: string
      example: ewhc/tcc/2022/42
  responses:
    judgmentFeed:
      description: An Atom feed of recently published judgments
      content:
        application/atom+xml:
          schema:
            description: List in Atom
    judgment:
      description: "A single judgment document, in Akoma Ntoso XML"
      content:
        application/akn+xml:
          schema:
            description: Akoma Ntoso
  securitySchemes: {}
paths:
  "/{court}/{subdivision}/{year}/atom.xml":
    get:
      summary: Get recently published or updated judgments
      description: |
        Less specific feeds can be gained by omitting the components e.g. /, /2022/, /ewhc/ and /ewhc/ch/ are all valid prefixes to atom.xml Note that a {court} is required if there is a {subdivision}
      operationId: listJudgments
      tags:
        - Reading
      parameters:
        - name: order
          required: false
          in: query
          schema:
            type: string
            enum:
              - date
              - "-date"
              - updated
              - "-updated"
              - transformation
              - "-transformation"
            default: "-date"
        - name: page
          required: false
          in: query
          schema:
            type: integer
            default: 1
      responses:
        "200":
          $ref: "#/components/responses/judgmentFeed"
    parameters:
      - name: court
        required: true
        in: path
        example: ewca
        schema:
          type: string
      - name: subdivision
        required: true
        in: path
        example: pat
        schema:
          type: string
      - name: year
        required: true
        in: path
        example: 2022
        schema:
          type: integer
  "/{judgmentUri}/data.xml":
    get:
      summary: "Read a published judgment or decision, given its URI"
      operationId: getDocumentByUri
      tags:
        - Reading
      responses:
        "200":
          $ref: "#/components/responses/judgment"
    parameters:
      - $ref: "#/components/parameters/judgmentUri"
